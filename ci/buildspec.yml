version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - COMMIT_HASH="$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)"
      - IMAGE_TAG="${COMMIT_HASH:=latest}"
      - printenv
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      #- docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      #- docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG       
      - docker build -f infrastructure/Dockerfile -t $IMAGE_REPO_NAME:latest .
      - docker tag $IMAGE_REPO_NAME:latest $IMAGE_REPO_NAME:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      #- docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

      - docker push $IMAGE_REPO_NAME:latest
      - docker push $IMAGE_REPO_NAME:$IMAGE_TAG
      - export IMAGE_NAME='krg-nodejs-skeleton-services'
      - export IMAGE_URI=$IMAGE_REPO_NAME:$IMAGE_TAG
      - "printf '[{\"name\":\"%s\",\"imageUri\":\"%s\"}]' \"$IMAGE_NAME\" \"$IMAGE_URI\" > imagedefinitions.json"
artifacts:
  files:
    - imagedefinitions.json
